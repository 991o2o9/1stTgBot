require('dotenv').config()
const {
	Bot,
	GrammyError,
	HttpError,
	Keyboard,
	InlineKeyboard,
} = require('grammy')
const { hydrate } = require('@grammyjs/hydrate')

const bot = new Bot(process.env.BOT_API_KEY)
bot.use(hydrate())

bot.api.setMyCommands([
	{
		command: 'start',
		description: '–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞',
	},
	{
		command: 'mood',
		description: '–ö–∞–∫ —É –≤–∞—Å –¥–µ–ª–∞?',
	},
	// {
	// 	command: 'share',
	// 	description: '–ß–µ–º —Ö–æ—Ç–∏—Ç–µ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è?',
	// },
	// {
	// 	command: 'inline_keyboard',
	// 	description: 'inline keyboard',
	// },
	{
		command: 'menu',
		description: '–ü–æ–ª—É—á–∏—Ç—å –º–µ–Ω—é',
	},
])

const menuKeyboard = new InlineKeyboard()
	.text('–£–∑–Ω–∞—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞', 'order-status')
	.text('–û–±—Ä–∞—Ç–∏—Ç—å—Å—è –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É', 'support')
const backKeyboard = new InlineKeyboard().text('< –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é', 'back')
bot.command('menu', async ctx => {
	await ctx.reply('–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç—ã –º–µ–Ω—é', {
		reply_markup: menuKeyboard,
	})
})

bot.callbackQuery('order-status', async ctx => {
	await ctx.callbackQuery.message.editText('–°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞: –ø—É—Ç–∏', {
		reply_markup: backKeyboard,
	})
	await ctx.answerCallbackQuery()
})
bot.callbackQuery('support', async ctx => {
	await ctx.callbackQuery.message.editText('–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –∑–∞–ø—Ä–æ—Å', {
		reply_markup: backKeyboard,
	})
	await ctx.answerCallbackQuery()
})
bot.callbackQuery('back', async ctx => {
	await ctx.callbackQuery.message.editText('–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç—ã –º–µ–Ω—é', {
		reply_markup: menuKeyboard,
	})
	await ctx.answerCallbackQuery()
})

// bot.command('start', async ctx => {
// 	await ctx.reply('–ü—Ä–∏–≤–µ—Ç —è –±–æ—Ç', {
// 		reply_parameters: { message_id: ctx.msg.message_id },
// 	})
// })
bot.command('start', async ctx => {
	await ctx.react('üëç')
	await ctx.reply(
		'–ü—Ä–∏–≤–µ—Ç —è –±–æ—Ç. –¢–≥ –∫–∞–Ω–∞–ª : <a href="https://www.youtube.com/watch?v=q-AFR0D7Vuw">–°—Å—ã–ª–∫–∞</a> ',
		{
			parse_mode: 'HTML',
		}
	)
})

bot.command('mood', async ctx => {
	const moodKeyboard = new Keyboard()
		.text('–•–æ—Ä–æ—à–æ')
		.row()
		.text('–ù–æ—Ä–º')
		.row()
		.text('–ü–ª–æ—Ö–æ')
		.row()
		.resized()
	await ctx.reply('–ö–∞–∫ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ', {
		reply_markup: moodKeyboard,
	})
})

bot.hears('–•–æ—Ä–æ—à–æ', async ctx => {
	await ctx.reply('–ö—Ä—É—Ç–æ! –†–∞–¥ —á—Ç–æ –≤–∞–º —Ö–æ—Ä–æ—à–æ', {
		reply_markup: { remove_keyboard: true },
	})
})
bot.hears('–ù–æ—Ä–º', async ctx => {
	await ctx.reply('–í–æ–∑–º–æ–∂–Ω–æ –≤—ã —É—Å—Ç–∞–ª–∏, –≤–∞—Å —Å—Ç–æ–∏—Ç –æ—Ç–¥–æ—Ö–Ω—É—Ç—å!', {
		reply_markup: { remove_keyboard: true },
	})
})
bot.hears('–ü–ª–æ—Ö–æ', async ctx => {
	await ctx.reply(
		'–ê —á—Ç–æ —Å–ª—É—á–∏–ª–æ—Å—å? –≤–æ—Ç –≤–∞–º –ø–µ—Å–Ω—è –¥–ª—è —Å–ø–æ–∫–æ–π—Å—Ç–≤–∏—è: –ù–∞–¥–µ—Å—å —ç—Ç–∞ [–ø–µ—Å–Ω—è](https://www.youtube.com/watch?v=7RWbq-lbBlk&list=RD7RWbq-lbBlk&start_radio=1), —Å–º–æ–∂–µ—Ç –≤–∞—Å —É—Å–ø–æ–∫–æ–∏—Ç—å',
		{
			parse_mode: 'MarkdownV2',
			disable_web_page_preview: true,
		}
	)
})

bot.command('help', async ctx => {
	await ctx.reply('–ß–µ–º —è –º–æ–≥—É –≤–∞–º –ø–æ–º–æ—á—å?')
})

bot.command(['say_hello', 'hello', 'say_hi'], async ctx => {
	await ctx.reply('Hello!')
})

bot.command('age', async ctx => {
	const moodLabels = ['–Ø –º–ª–∞–¥—à–µ 18 –ª–µ—Ç', '–Ø —Å—Ç–∞—Ä—à–µ 18 –ª–µ—Ç', '–ú–Ω–µ –±–æ–ª—å—à–µ 50 –ª–µ—Ç']
	const rows = moodLabels.map(label => {
		return [Keyboard.text(label)]
	})
	const moodKeyboard2 = Keyboard.from(rows).resized()
	await ctx.reply('–°–∫–æ–ª—å–∫–æ –≤–∞–º –ª–µ—Ç?', {
		reply_markup: moodKeyboard2,
	})
})

bot.hears('–Ø –º–ª–∞–¥—à–µ 18 –ª–µ—Ç', async ctx => {
	await ctx.reply('–ë–ª—è—Ç—å —Ç—ã –∫–∞–∫–æ–≥–æ —Ö—É—è —Ç—É—Ç –∑–∞–±—ã–ª, –º–ª–∞–¥–µ–Ω–µ—Ü', {
		reply_markup: { remove_keyboard: true },
	})
})

bot.command('share', async ctx => {
	const shareKeyboard = new Keyboard()
		.requestLocation('–ì–µ–æ–ª–æ–∫–∞—Ü–∏—è')
		.requestContact('–ö–æ–Ω—Ç–∞–∫—Ç')
		.requestPoll('–û–ø—Ä–æ—Å')
		.placeholder('–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ')
		.resized()
	await ctx.reply('–ß–µ–º —Ö–æ—Ç–∏—Ç–µ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è?', {
		reply_markup: shareKeyboard,
	})
})

bot.on(':contact', async ctx => {
	await ctx.reply('–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã')
})

bot.command('inline_keyboard', async ctx => {
	const keyboard = new InlineKeyboard()
		.text('1', 'button-1')
		.row()
		.text('2', 'button-2')
		.row()
		.text('3', 'button-3')
	// const keyboard2 = new InlineKeyboard().url(
	// 	'–ü–µ—Ä–µ–π—Ç–∏ –ø–æ —Å—Å—ã–ª–∫–µ',
	// 	'https://www.youtube.com/watch?v=q-AFR0D7Vuw'
	// )
	// await ctx.reply('–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É', {
	// 	reply_markup: keyboard2,
	// })
	await ctx.reply('–í—ã–±–µ—Ä–∏—Ç–µ —Ü–∏—Ñ—Ä—É', {
		reply_markup: keyboard,
	})
})

// bot.callbackQuery(['button-1', 'button-2', 'button-3'], async ctx => {
// 	await ctx.answerCallbackQuery('–í—ã –≤—ã–±—Ä–∞–ª–∏ —Ü–∏—Ñ—Ä—É')
// 	await ctx.reply('–í—ã –≤—ã–±—Ä–∞–ª–∏ —Ü–∏—Ñ—Ä—É')
// })

bot.callbackQuery(/button-[1-3]/, async ctx => {
	await ctx.answerCallbackQuery()
	await ctx.reply(`–í—ã –Ω–∞–∂–∞–ª–∏ –∫–Ω–æ–ø–∫—É ${ctx.callbackQuery.data} `)
})

// bot.on('callback_query:data', async ctx => {
// 	await ctx.answerCallbackQuery()
// 	await ctx.reply(`–í—ã –Ω–∞–∂–∞–ª–∏ –∫–Ω–æ–ø–∫—É ${ctx.callbackQuery.data} `)
// })

// bot.on('::url', async ctx => {
// 	await ctx.reply('–Ø –ø–æ–ª—É—á–∏–ª —Å—Å—ã–ª–∫—É')
// })
// bot.on('message:photo', async ctx => {
// 	await ctx.reply('–Ω–∞—Ö –º–Ω–µ —Ç–≤–æ—è –µ–±–∞–Ω–Ω–æ–µ, –≥—Ä—è–∑–Ω–æ–µ –ª–∏—Ü–æ')
// })

// bot.on('photo').on('::hashtag', async ctx => {
// 	await ctx.reply(
// 		'–Ω–∞—Ö –º–Ω–µ —Ç–≤–æ—è –µ–±–∞–Ω–Ω–æ–µ, –≥—Ä—è–∑–Ω–æ–µ –ª–∏—Ü–æ, –±–ª—è—Ç—å —Ç—ã –ª–∏–±–æ –¥–∞—É–Ω, –ª–∏–±–æ –∞—É—Ç–∏—Å—Ç –Ω–∞—Ö—É—è –º–Ω–µ –Ω—É–∂–µ–Ω —Ç–≤–æ–π —Ö–µ—à—Ç–µ–≥'
// 	)
// })

// bot.on('msg').filter(
// 	ctx => {
// 		return (ctx.from.id = 255162448)
// 	},
// 	async ctx => {
// 		await ctx.reply('–ü—Ä–∏–≤–µ—Ç, –∞–¥–º–∏–Ω')
// 	}
// )

// bot.hears(['—É–Ω–æ', '–¥–æ—Å', '—Ç—Ä–µ—Å'], async ctx => {
// 	const text = ctx.message.text
// 	if (text === '—É–Ω–æ') {
// 		await ctx.reply('–¥–æ—Å —Ç—Ä–µ—Å')
// 	} else if (text === '–¥–æ—Å') {
// 		await ctx.reply('—Ç—Ä–µ—Å ma boy')
// 	} else if (text === '—Ç—Ä–µ—Å') {
// 		await ctx.reply(
// 			'What the hell bro. Why did you decide to start from the end?'
// 		)
// 	}
// })

bot.hears(/–±–ª—è|—Å—É–∫–∞|–ø–∏–∑–¥–∞|—Ö—É–π|—É–º—Ä–∏|kys|–µ–±–ª–∞–Ω/, async ctx => {
	await ctx.reply(
		'–ê—Ö—Ö —Ç—ã –º–∞–ª–µ–Ω—å–∫–∏–π –ø–∏–¥–æ—Ä–∞—Å... –º–∞—Ç–µ—Ä–∏—à—å—Å—è? –Ø –≤—Å–µ —ç—Ç–æ —Ç–≤–æ–µ–π –º–∞–º–µ —Å–∫–∏–Ω—É'
	)
})

// bot.on('msg', async ctx => {
// 	console.log(ctx.from)
// })

// bot.hears('ID', async ctx => {
// 	await ctx.reply(`–í–∞—à ID: ${ctx.from.id}`)
// })

// –∫–∞–∫ –ø–æ–∫–∞–∑–∞–ª –≤—ã—à–µ, –º–æ–∂–Ω–æ –¥–µ–ª–∞—Ç—å —Å–≤–æ–∏ –∫–∞—Å—Ç–æ–º–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã

// –µ—Å—Ç—å –æ–≥—Ä–æ–º–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–∏–ª—å—Ç—Ä–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ —É–∑–Ω–∞—Ç—å –ø–µ—Ä–µ–π–¥—è –ø–æ —Å—Å—ã–ª–∫–µ.

// –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã –º–æ–∂–Ω–æ –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞—Ç—å, –∑–∞—Å—É–Ω—É—Ç—å –º–∞—Å—Å–∏–≤, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –∏–≥—Ä–∞—Ç—å —Ä–æ–ª—å "–∏–ª–∏", —Ç–∞–∫ –∂–µ –µ—Å—Ç—å —Å–ø–∏—Å–æ–∫ —Å–æ–∫—Ä–∞—â–µ–Ω–∏–π –Ω–∞–ø—Ä–∏–º–µ—Ä: –º–µ—Å—Ç–æ —Ç–æ–≥–æ —á—Ç–æ–±—ã –ø–∏—Å–∞—Ç—å message:photo –º–æ–∂–Ω–æ –ø—Ä–æ—Å—Ç–æ :photo –∏ —Ç–∞–∫ –¥–∞–ª–µ–µ

bot.catch(err => {
	const ctx = err.ctx
	console.error(`Error while handling update ${ctx.update.update_id}:`)
	const e = err.error

	if (e instanceof GrammyError) {
		console.error('Error in request:', e.description)
	} else {
		console.error('Unknown error:', e)
	}
})

bot.start()
